{"ast":null,"code":"var _jsxFileName = \"/Users/kamalshamsi/Desktop/classes/cse 115a/Smart-Budget/Frontend/src/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:8000/login', {\n        username,\n        password\n      });\n      if (response.status === 200) {\n        // Login successful\n        setIsLoggedIn(true);\n      } else {\n        // Login failed\n        console.log('Login failed:', response.data.message);\n      }\n    } catch (error) {\n      // Handle login error\n      console.error('Login failed:', error.response.data.error);\n    }\n  };\n  const logout = () => {\n    // Perform logout logic (e.g., clear session data)\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","isLoggedIn","setIsLoggedIn","login","username","password","response","post","status","console","log","data","message","error","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kamalshamsi/Desktop/classes/cse 115a/Smart-Budget/Frontend/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:8000/login', {\n        username,\n        password,\n      });\n\n      if (response.status === 200) {\n        // Login successful\n        setIsLoggedIn(true);\n      } else {\n        // Login failed\n        console.log('Login failed:', response.data.message);\n      }\n    } catch (error) {\n      // Handle login error\n      console.error('Login failed:', error.response.data.error);\n    }\n  };\n\n  const logout = () => {\n    // Perform logout logic (e.g., clear session data)\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthContext, AuthProvider };\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,MAAMM,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAChC,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,6BAA6B,EAAE;QAC/DH,QAAQ;QACRC;MACF,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B;QACAN,aAAa,CAAC,IAAI,CAAC;MACrB,CAAC,MAAM;QACL;QACAO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC;MACrD;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd;MACAJ,OAAO,CAACI,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACP,QAAQ,CAACK,IAAI,CAACE,KAAK,CAAC;IAC3D;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAZ,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEf,UAAU;MAAEE,KAAK;MAAEW;IAAO,CAAE;IAAAd,QAAA,EACxDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACrB,EAAA,CAjCIF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAmClB,SAASD,WAAW,EAAEC,YAAY;AAAG,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}